" General Vim Settings
" --------------------

set nocompatible
filetype plugin indent on

syntax on
set backspace=2      " Backspace deletes like most programs in insert mode
set nobackup
set nowritebackup
set noswapfile
set history=50
set ruler            " show the cursor position all the time
set showcmd          " display incomplete commands
set incsearch        " do incremental searching
set laststatus=2     " Always display the status line
set autowrite        " Automatically :write before running commands
set formatoptions-=t " Don't auto-break long lines (re-enable this for prose)
set ignorecase

" Softtabs, 2 spaces
set tabstop=2
set shiftwidth=2
set shiftround
set expandtab

" Display extra whitespace
set list listchars=tab:»·,trail:·,nbsp:·

" Use one space, not two, after punctuation.
set nojoinspaces

" Display relative line numbers, with absolute line number for current line
set number
set numberwidth=5
set relativenumber

" When the type of shell script is /bin/sh, assume a POSIX-compatible
" shell for syntax highlighting purposes.
let g:is_posix = 1

" Set spellfile to location that is guaranteed to exist, can be symlinked to
" Dropbox or kept in Git and managed outside of thoughtbot/dotfiles using rcm.
set spellfile=$HOME/.vim-spell-en.utf-8.add

" Autocomplete with dictionary words when spell check is on
set complete+=kspell

set splitright


let mapleader=","

" Base64 decode word under cursor
nmap <Leader>b :!echo <C-R><C-W> \| base64 -d<CR>

" grep recursively for word under cursor
nmap <Leader>g :tabnew\|read !grep -Hnr '<C-R><C-W>'<CR>

" sort the buffer removing duplicates
nmap <Leader>s :%!sort -u --version-sort<CR>

" Don't require saving before closing a buffer
set hidden
set path+=**
set wildmenu
set wildmode=list:longest


set shell=/bin/bash
call plug#begin('~/.vim/plugins')

" Fugitive - Vim meets git. Gstatus, Gdiff, etc.
Plug 'tpope/vim-fugitive'
nnoremap \<space> :Git<cr>:wincmd _<cr>
nnoremap \gr :Grebase -i master<cr>

Plug 'morhetz/gruvbox'

Plug 'scrooloose/nerdtree'

" Surround - Mappings for adding, removing, and changing surrounding characters
Plug 'tpope/vim-surround'
let g:surround_99 = "```\r```"

" TextObj - Custom text objects for the line, indent level, entier file, etc
Plug 'kana/vim-textobj-user'
Plug 'kana/vim-textobj-line'
Plug 'kana/vim-textobj-indent'
Plug 'kana/vim-textobj-entire'
Plug 'beloglazov/vim-textobj-quotes'
" Plug 'christoomey/vim-textobj-codeblock'
Plug '~/code/vim/textobj-codeblock'
Plug 'dense-analysis/ale'
Plug 'vim-syntastic/syntastic'
Plug 'xolox/vim-misc'
Plug 'xolox/vim-easytags'
Plug 'preservim/tagbar'
Plug 'rust-lang/rust.vim'
Plug 'wellle/targets.vim'
Plug 'github/copilot.vim'

call plug#end()

" Post plugin setup
color gruvbox
set background=dark

"  -- Ale Setup
let g:ale_linters = {
\  'rust' : ['rls', 'analyzer']
\}

let g:ale_fixers = {
\ 'rust' : ['rustfmt']
\}

let g:rustfmt_autosave = 1

"  -- Syntastic Setup
set statusline+=%#warningmsg#
set statusline+=%{SyntasticStatuslineFlag()}
set statusline+=%*

let g:syntastic_always_populate_loc_list = 1
let g:syntastic_auto_loc_list = 1
let g:syntastic_check_on_open = 1
let g:syntastic_check_on_wq = 0

"  -- tagbar setup
nmap <F8> :TagbarToggle<CR>

" -- EasyTags setup
" Note first we did :  sudo apt-get install exuberant-ctags
let g:easytags_async = 1


" vim:ft=vim
